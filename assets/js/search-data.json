{
  
    
        "post0": {
            "title": "WFG",
            "content": "/Users/gabriela/Research/plots/venv/lib/python3.7/site-packages/seaborn/categorical.py:3762: UserWarning: catplot is a figure-level function and does not accept target axes. You may wish to try boxplot warnings.warn(msg, UserWarning) . &lt;matplotlib.legend.Legend at 0x125ed53d0&gt; . nondominated . radviz_problem(df, &quot;WFG1&quot;, 3) . radviz_problem(df, &quot;WFG2&quot;, 3) . radviz_problem(df, &quot;WFG4&quot;, 3) . radviz_problem(df, &quot;WFG1&quot;, 5) . radviz_problem(df, &quot;WFG2&quot;, 5) . radviz_problem(df, &quot;WFG4&quot;, 5) . radviz_rep(df_reps) . mga . radviz_problem(df_mga, &quot;WFG1&quot;, 3) . radviz_problem(df_mga, &quot;WFG2&quot;, 3) . radviz_problem(df_mga, &quot;WFG4&quot;, 3) . radviz_problem(df_mga, &quot;WFG1&quot;, 5) . radviz_problem(df_mga, &quot;WFG2&quot;, 5) . radviz_problem(df_mga, &quot;WFG4&quot;, 5) . aas . radviz_problem(df_aas, &quot;WFG1&quot;, 3) . radviz_problem(df_aas, &quot;WFG2&quot;, 3) . radviz_problem(df_aas, &quot;WFG4&quot;, 3) . radviz_problem(df_aas, &quot;WFG1&quot;, 5) . radviz_problem(df_aas, &quot;WFG2&quot;, 5) . radviz_problem(df_aas, &quot;WFG4&quot;, 5) .",
            "url": "https://gabicavalcante.github.io/multimanyreferencefronts/2020/10/15/wfg.html",
            "relUrl": "/2020/10/15/wfg.html",
            "date": " • Oct 15, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "DTLZ",
            "content": "fig = sns.catplot(data=df.query(&quot;problem != &#39;DTLZ2&#39;&quot;), x=&quot;problem&quot;, y=&quot;nondominated&quot;, hue=&quot;nobj&quot;, col=&quot;size&quot;, kind=&quot;box&quot;, sharey=False, aspect=0.5, height=10) . radviz_problem(df, &quot;DTLZ2&quot;, 3) . radviz_problem(df, &quot;DTLZ4&quot;, 3) . radviz_problem(df, &quot;DTLZ7&quot;, 3) . radviz_problem(df, &quot;DTLZ2&quot;, 5) . radviz_problem(df, &quot;DTLZ4&quot;, 5) . radviz_problem(df, &quot;DTLZ7&quot;, 5) . radviz_rep(df_reps) . df_mga = {nobj: pd.concat(gen_maker(nobj, &quot;mga&quot;)).groupby(&quot;problem&quot;) for nobj in nobjs} . df_mga . {3: &lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x11859fe10&gt;, 5: &lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x1191fa048&gt;} . radviz_problem(df_mga, &quot;DTLZ2&quot;, 3) . radviz_problem(df_mga, &quot;DTLZ4&quot;, 3) . radviz_problem(df_mga, &quot;DTLZ7&quot;, 3) . radviz_problem(df_mga, &quot;DTLZ2&quot;, 5) . radviz_problem(df_mga, &quot;DTLZ4&quot;, 5) . No handles with labels found to put in legend. . radviz_problem(df_mga, &quot;DTLZ7&quot;, 5) . df_aas = {nobj: pd.concat(gen_maker(nobj, &quot;aas&quot;, sep=&quot; &quot;)).groupby(&quot;problem&quot;) for nobj in nobjs} . radviz_problem(df_aas, &quot;DTLZ2&quot;, 3) . radviz_problem(df_aas, &quot;DTLZ4&quot;, 3) . radviz_problem(df_aas, &quot;DTLZ7&quot;, 3) . radviz_problem(df_aas, &quot;DTLZ2&quot;, 5) . radviz_problem(df_aas, &quot;DTLZ4&quot;, 5) . radviz_problem(df_aas, &quot;DTLZ7&quot;, 5) .",
            "url": "https://gabicavalcante.github.io/multimanyreferencefronts/2020/10/15/dtlz.html",
            "relUrl": "/2020/10/15/dtlz.html",
            "date": " • Oct 15, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://gabicavalcante.github.io/multimanyreferencefronts/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://gabicavalcante.github.io/multimanyreferencefronts/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}